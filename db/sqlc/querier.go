// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"context"
)

type Querier interface {
	AddAvailability(ctx context.Context, arg AddAvailabilityParams) (Availability, error)
	CreatePhone(ctx context.Context, arg CreatePhoneParams) (Phone, error)
	CreateProfessionalInformation(ctx context.Context, arg CreateProfessionalInformationParams) (ProfessionalInformation, error)
	CreateProfessionalUser(ctx context.Context, arg CreateProfessionalUserParams) (ProfessionalUser, error)
	CreateResponsibleStudent(ctx context.Context, arg CreateResponsibleStudentParams) (ResponsibleStudent, error)
	CreateStudentUser(ctx context.Context, arg CreateStudentUserParams) (StudentUser, error)
	CreateSubjectMatter(ctx context.Context, arg CreateSubjectMatterParams) (SubjectMatter, error)
	CreateSubjectMatterClass(ctx context.Context, arg CreateSubjectMatterClassParams) (SubjectMatterClass, error)
	DeleteAvailability(ctx context.Context, id int64) (Availability, error)
	DeletePhone(ctx context.Context, id int64) (Phone, error)
	DeleteProfessionalInformation(ctx context.Context, id int64) (ProfessionalInformation, error)
	DeleteProfessionalUser(ctx context.Context, id int64) (ProfessionalUser, error)
	DeleteResponsibleStudent(ctx context.Context, id int64) (ResponsibleStudent, error)
	DeleteStudentUser(ctx context.Context, id int64) (StudentUser, error)
	DeleteSubjectMatter(ctx context.Context, id int64) (SubjectMatter, error)
	DeleteSubjectMatterClass(ctx context.Context, id int64) (SubjectMatterClass, error)
	GetAvailability(ctx context.Context, id int64) (Availability, error)
	GetPhone(ctx context.Context, id int64) (Phone, error)
	GetProfessionalInformation(ctx context.Context, id int64) (ProfessionalInformation, error)
	GetProfessionalUser(ctx context.Context, username string) (ProfessionalUser, error)
	GetResponsibleStudent(ctx context.Context, username string) (ResponsibleStudent, error)
	GetStudentUser(ctx context.Context, username string) (StudentUser, error)
	GetSubjectMatter(ctx context.Context, id int64) (SubjectMatter, error)
	GetSubjectMatterClass(ctx context.Context, id int64) (SubjectMatterClass, error)
	ListAvailability(ctx context.Context, arg ListAvailabilityParams) ([]Availability, error)
	ListPhone(ctx context.Context, arg ListPhoneParams) ([]Phone, error)
	ListProfessionalInformation(ctx context.Context, arg ListProfessionalInformationParams) ([]ProfessionalInformation, error)
	ListProfessionalInformationByUser(ctx context.Context, professionalUserID int64) ([]ProfessionalInformation, error)
	ListProfessionalUser(ctx context.Context, arg ListProfessionalUserParams) ([]ProfessionalUser, error)
	ListResponsibleStudent(ctx context.Context, arg ListResponsibleStudentParams) ([]ResponsibleStudent, error)
	ListStudentUser(ctx context.Context, arg ListStudentUserParams) ([]StudentUser, error)
	ListSubjectMatter(ctx context.Context, arg ListSubjectMatterParams) ([]SubjectMatter, error)
	ListSubjectMatterClass(ctx context.Context, arg ListSubjectMatterClassParams) ([]SubjectMatterClass, error)
	UpdatePhone(ctx context.Context, arg UpdatePhoneParams) (Phone, error)
	UpdateProfessionalInformation(ctx context.Context, arg UpdateProfessionalInformationParams) (ProfessionalInformation, error)
	UpdateProfessionalUser(ctx context.Context, arg UpdateProfessionalUserParams) (ProfessionalUser, error)
	UpdateResponsibleStudent(ctx context.Context, arg UpdateResponsibleStudentParams) (ResponsibleStudent, error)
	UpdateStudentUser(ctx context.Context, arg UpdateStudentUserParams) (StudentUser, error)
	UpdateSubjectMatter(ctx context.Context, arg UpdateSubjectMatterParams) (SubjectMatter, error)
	UpdateSubjectMatterClass(ctx context.Context, arg UpdateSubjectMatterClassParams) (SubjectMatterClass, error)
}

var _ Querier = (*Queries)(nil)
